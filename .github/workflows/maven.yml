# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
# Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t demo-app .

    # Run Docker container
    - name: Run Docker container
      run: |
        docker run -d -p 8080:8080 --name demo-app-container demo-app

    # Wait for the app to be available (can be adjusted based on the app startup time)
    - name: Wait for the app to be available
      run: |
        sleep 10  # Adjust if necessary, or use `docker logs` to check when the app is ready.

    # Test the application using curl
    - name: Access the application using curl
      run: |
        curl --fail http://localhost:8080 || exit 1

    # Clean up Docker container (optional)
    - name: Clean up Docker container
      run: |
        docker stop demo-app-container
        docker rm demo-app-container
